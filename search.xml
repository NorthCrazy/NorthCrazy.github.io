<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[初识Unity（一）]]></title>
    <url>%2F2019%2F06%2F29%2F20190629%2F</url>
    <content type="text"><![CDATA[Unity父子物体关系 &emsp;&emsp;一个游戏对象只能有一个父物体，可以有无数个子物体。子物体的位置、旋转和缩放都是相对于父物体的。 &emsp;&emsp;当对一个子物体进行位移、旋转、缩放的时候，不会对父物体产生影响。而在对一个父物体进行位移、旋转、缩放的时候，会对所有子物体产生影响。&nbsp; &nbsp; Unity的基础组件 &emsp;&emsp;组件就是一个具有一定功能的集合。如果希望某一个游戏对象具有某些功能，那么只需要给这个游戏对象添加对应的组件即可。 示例：Mash Filter：网格过滤器。这个组件决定了一个游戏对象的形状。Mash Renderer：网格渲染器。决定了一个游戏对象的外观展示。&nbsp; &nbsp; Unity的预设体 &emsp;&emsp;我们可以将某个游戏对象以文件的形式存储起来，这就是预设体。预设体用来批量管理游戏对象。 &emsp;&emsp;修改预设体的缩放，会对所有的预设体的游戏对象都产生影响，如果对一个预设体的游戏对象修改了它的缩放预设值，那么预设体的修改将对该物体无效。如果给一个预设体添加了组件，那么所有的预设体的游戏对象都会被添加这个组件。 Select：快速找到游戏对象对应的预设体文件。 Revert：将游戏对象的组件以及属性还原为预设体中的定义。 Apply：将游戏对象的组件以及属性应用给预设体。&nbsp; &nbsp; Unity导入资源包 &emsp;&emsp;新建一个项目后，可以将需要的素材直接拷贝过去。但是，这样是比较麻烦的，所以我们需要另一种更简单的方式。 &emsp;&emsp;我们可以把项目中用到的资源打包导出。资源包有两个操作：导入和导出。 导入资源包：导入资源包有三种方式： &emsp;&emsp;第一种，我们可以直接拖拽资源包到Unity中，然后弹出对话框选择需要导入的资源文件，选定后，单击Export即可。 &emsp;&emsp;第二种，在Project面板右键，找到Improt Package。在Improt Package当中，除了Custom Package（导入自定义资源包）以外，在下面还列出了许多系统给我们提供的标准资源包。 &emsp;&emsp;第三种，直接双击unitypackage文件即可。 导出资源包： 在Project面板右键 单击Exporting package 选中需要打包的内容 选完后，单击Export 选择存放资源包的位置。Unity的资源包格式：unitypackage&nbsp; &nbsp; 标准资源包（Standard Assets） &emsp;&emsp;在之前的导入资源包中，我们已经说了标准资源包导入的位置，那么有可能你的Unity并没有显示出来，那么我们可以通过下面这条路径去找到这些标准资源包。 12Windows路径：Unity的安装路径\Editor\Standard AssetsMac路径：Applications\Unity\Standard Assets &emsp;&emsp;如果你还是没有找到的话，那么你可以去找别人拷贝一份。 &emsp;&emsp;在5.x版本的Unity当中，标准资源包被移出了默认安装当中。需要在UnityStory商店中自行下载（免费）。或者可以在百度中自行搜索资源下载。&nbsp; &nbsp; Unity地形（Terrain）基础设置 上升地形（Raise or Lower Terrain）：按住shift可以将地形刷低。 Bursh：笔刷样式 Brush size：笔刷大小 Opcity：笔刷硬度 恒高地形（Set Height）：设置一个高度，然后将这个高于这个高度的部分刷低，将低于这个高度的部分刷高。 Flatten：将设定的高度应用给整个地形。 平滑地形（Smooth Height）：平滑可以使一些棱角分明的地方变得圆润平滑。&nbsp; &nbsp; Unity刚体组件（Rigidbody） 刚体组件（Rigidbody）提供了模拟现实的物理效果。 Mess：质量。 Drag：拉力。运动方向上的一个阻力。 Angular Drag：旋转的拉力。一个物体在受到一个力的时候，有可能会旋转。 User Gravity：使用重力。 Is Kinematic：开启运动学。 Interpolate：差值。内差值和外插值 Collision Detection：碰撞检测机制。 Constraints：Freeze Position：约束。 Freeze Position：冻结位置。 Freeze Rotation：冻结旋转。&nbsp; &nbsp; Unity碰撞体组件（Collider） &emsp;&emsp;有很多的Collider，区别就在于碰撞体的形状。&nbsp; &nbsp; Unity物理材质（Physic Material） Dynamic Friction：动态摩擦力。有相对有位移的时候的摩擦力 Static Friction：静态摩擦力。 Bounciness：弹力。 Friction Combine：组合摩擦力。Average：取平均值。 &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Minimum：取最小值。 &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Multiply：取乘积。 &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Maximum：取最大值。 Bounce Combine：弹力。 &emsp; Average：取平均值。 &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Minimum：取最小值. &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Multiply：取乘积。 &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Maximum：取最大值。 &emsp;&emsp;如果没有设置物理材质，那么摩擦力默认为无穷大，弹力为零。]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Unity</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[什么是Unity？]]></title>
    <url>%2F2019%2F06%2F24%2F20190624%2F</url>
    <content type="text"><![CDATA[什么是Unity？ &emsp;&emsp;Unity就是一款游戏引擎。王者荣耀、炉石传说、刺激战场、仙剑奇侠传都是以Unity作为引擎进行开发的。 &emsp;&emsp;Unity除了游戏开发，还可以进行工艺仿真、手机APP、增强现实、虚拟现实、动漫、电影等。 &emsp;&emsp;Unity的比较火的原因是Unity具有的跨平台特性（全平台特性）、组件化设计以及Unity的入门较为简单（初学者两个月左右，即可完成独立游戏开发）。 &nbsp;&nbsp; Unity的职能分工和职业规划 &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;技术总监 主策划 主程序 主美术 系统策划 服务端 原画组 数值策划 客户端 3D建筑 关卡策划 工具开发 3D角色 剧情策划 运营数据系统 骨骼动画 任务策划 粒子特效 地形编辑 UI界面 Unity开发是作为一个客户端的职位。服务端负责把游戏的数据存储在服务器，客户端从服务端拿到数据，最后显示在前端。 工具开发是为了给客户端制作一些开发工具。帮助开发人员进行快速开发。 运营数据系统主要是给服务端使用。在游戏上线后，系统数据会有变更，所以就需要运营数据系统进行快速的数据修改。 Unity客户端开发在向上发展后就是主程序开发人员，很多部分都需要主程序开发人员的介入。最后就是我们的开发总监，需要对三个部门进行协调处理。]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Unity</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F06%2F23%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Hexo文档</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
